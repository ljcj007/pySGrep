from sympy import symbols, Matrix
def JonesSymbols():
    name_cub = ["E", "C2x", "C2y", "C2z", "C31+", "C32+", "C33+", "C34+",
                "C31-", "C32-", "C33-", "C34-", "C4x+", "C4y+", "C4z+", "C4x-",
                "C4y-", "C4z-", "C2a", "C2b", "C2c", "C2d", "C2e", "C2f",
                "I", "Sigmax", "Sigmay", "Sigmaz", "S61-", "S62-", "S63-", "S64-",
                "S61+", "S62+", "S63+", "S64+", "S4x-", "S4y-", "S4z-", "S4x+",
                "S4y+", "S4z+", "Sigmada", "Sigmadb", "Sigmadc", "Sigmadd", "Sigmade", "Sigmadf"]
    # Define symbolic variables
    x, y, z = symbols('x y z')

    # Define the coordinate triplets from xyzCub
    xyz_cub = [
        [x, y, z], [x, -y, -z], [-x, y, -z], [-x, -y, z], [z, x, y], [-z, x, -y], [-z, -x, y], [z, -x, -y],
        [y, z, x], [y, -z, -x], [-y, z, -x], [-y, -z, x], [x, -z, y], [z, y, -x], [-y, x, z], [x, z, -y],
        [-z, y, x], [y, -x, z], [y, x, -z], [-y, -x, -z], [z, -y, x], [-x, z, y], [-z, -y, -x], [-x, -z, -y],
        [-x, -y, -z], [-x, y, z], [x, -y, z], [x, y, -z], [-z, -x, -y], [z, -x, y], [z, x, -y], [-z, x, y],
        [-y, -z, -x], [-y, z, x], [y, -z, x], [y, z, -x], [-x, z, -y], [-z, -y, x], [y, -x, -z], [-x, -z, y],
        [z, -y, -x], [-y, x, -z], [-y, -x, z], [y, x, z], [-z, y, -x], [x, -z, -y], [z, y, x], [x, z, y]
    ]

    # Compute coefficient matrices for each coordinate triplet
    mat_cub = [Matrix([expr]).jacobian([x, y, z]) for expr in xyz_cub]

    name_hex = ["E", "C6+", "C3+", "C2", "C3-", "C6-", "C21p", "C22p",
                "C23p", "C21pp", "C22pp", "C23pp", "I", "S3-", "S6-", "Sigmah",
                "S6+", "S3+", "Sigmad1", "Sigmad2", "Sigmad3", "Sigmav1", "Sigmav2", "Sigmav3"]
    
    # Define the symbolic expressions for xyzHex
    xyz_hex = [
        [x, y, z], [x - y, x, z], [-y, x - y, z], [-x, -y, z], [-x + y, -x, z], [y, -x + y, z],
        [-x + y, y, -z], [x, x - y, -z], [-y, -x, -z], [x - y, -y, -z], [-x, -x + y, -z],
        [y, x, -z], [-x, -y, -z], [-x + y, -x, -z], [y, -x + y, -z], [x, y, -z],
        [x - y, x, -z], [-y, x - y, -z], [x - y, -y, z], [-x, -x + y, z], [y, x, z],
        [-x + y, y, z], [x, x - y, z], [-y, -x, z]
    ]

    # Compute coefficient matrices for each expression
    mat_hex = [Matrix([expr]).jacobian([x, y, z]) for expr in xyz_hex]

    return [
        list(zip(name_cub, xyz_cub, mat_cub)),
        list(zip(name_hex, xyz_hex, mat_hex))
    ]

JonesSymbol=JonesSymbols()

RotMat = ({'TricPrim': ['E', 'I'],
  'MonoPrim': ['E', 'C2z', 'I', 'Sigmaz'],
  'MonoBase': ['E', 'C2z', 'I', 'Sigmaz'],
  'OrthPrim': ['E', 'C2x', 'C2y', 'C2z', 'I', 'Sigmax', 'Sigmay', 'Sigmaz'],
  'OrthBase': ['E', 'C2x', 'C2y', 'C2z', 'I', 'Sigmax', 'Sigmay', 'Sigmaz'],
  'OrthBody': ['E', 'C2x', 'C2y', 'C2z', 'I', 'Sigmax', 'Sigmay', 'Sigmaz'],
  'OrthFace': ['E', 'C2x', 'C2y', 'C2z', 'I', 'Sigmax', 'Sigmay', 'Sigmaz'],
  'TetrPrim': ['E', 'C4z+','C2z', 'C4z-','C2x', 'C2y',  'C2a', 'C2b', 'I',
   'S4z-', 'Sigmaz', 'S4z+', 'Sigmax', 'Sigmay', 'Sigmada', 'Sigmadb'],
  'TetrBody': ['E', 'C4z+', 'C2z', 'C4z-', 'C2x', 'C2y', 'C2a', 'C2b',
   'I', 'S4z-', 'Sigmaz', 'S4z+', 'Sigmax', 'Sigmay', 'Sigmada', 'Sigmadb'],
  'TrigPrim': ['E', 'C3+', 'C3-', 'C21p', 'C22p', 'C23p', 'I', 'S6-',
                'S6+',  'Sigmad1', 'Sigmad2', 'Sigmad3'],
  'HexaPrim': ['E', 'C6+', 'C3+', 'C2', 'C3-', 'C6-', 'C21p', 'C22p',
               'C23p', 'C21pp', 'C22pp', 'C23pp', 'I', 'S3-', 'S6-',
               'Sigmah', 'S6+', 'S3+', 'Sigmad1', 'Sigmad2', 'Sigmad3',
              'Sigmav1', 'Sigmav2', 'Sigmav3'],
  'CubiPrim': ['E', 'C2x', 'C2y', 'C2z', 'C31+', 'C32+', 'C33+', 'C34+',
               'C31-', 'C32-', 'C33-', 'C34-', 'C4x+', 'C4y+', 'C4z+',
               'C4x-', 'C4y-', 'C4z-', 'C2a', 'C2b', 'C2c', 'C2d', 'C2e', 'C2f',
               'I', 'Sigmax', 'Sigmay', 'Sigmaz', 'S61-', 'S62-', 'S63-', 'S64-', 'S61+',
               'S62+', 'S63+', 'S64+', 'S4x-', 'S4y-', 'S4z-', 'S4x+', 'S4y+', 'S4z+',
               'Sigmada', 'Sigmadb', 'Sigmadc', 'Sigmadd', 'Sigmade', 'Sigmadf'],
  'CubiFace': ['E', 'C2x', 'C2y', 'C2z', 'C31+', 'C32+', 'C33+', 'C34+', 'C31-',
               'C32-', 'C33-', 'C34-', 'C4x+', 'C4y+', 'C4z+', 'C4x-', 'C4y-',
               'C4z-', 'C2a', 'C2b', 'C2c', 'C2d', 'C2e', 'C2f', 'I', 'Sigmax',
               'Sigmay', 'Sigmaz', 'S61-', 'S62-', 'S63-', 'S64-', 'S61+', 'S62+',
               'S63+', 'S64+', 'S4x-', 'S4y-', 'S4z-', 'S4x+', 'S4y+', 'S4z+',
               'Sigmada', 'Sigmadb', 'Sigmadc', 'Sigmadd', 'Sigmade', 'Sigmadf'],
  'CubiBody': ['E', 'C2x', 'C2y', 'C2z', 'C31+', 'C32+', 'C33+', 'C34+', 'C31-',
               'C32-', 'C33-', 'C34-', 'C4x+', 'C4y+', 'C4z+', 'C4x-', 'C4y-',
               'C4z-', 'C2a', 'C2b', 'C2c', 'C2d', 'C2e', 'C2f', 'I', 'Sigmax',
               'Sigmay', 'Sigmaz', 'S61-', 'S62-', 'S63-', 'S64-', 'S61+', 'S62+',
               'S63+', 'S64+', 'S4x-', 'S4y-', 'S4z-', 'S4x+', 'S4y+', 'S4z+', 
               'Sigmada', 'Sigmadb', 'Sigmadc', 'Sigmadd', 'Sigmade', 'Sigmadf']},
 {'TricPrim': [Matrix([ [1, 0, 0], [0, 1, 0], [0, 0, 1]]),
               Matrix([ [-1,  0,  0], [ 0, -1,  0], [ 0,  0, -1]])],
  'MonoPrim': [Matrix([ [1, 0, 0], [0, 1, 0], [0, 0, 1]]),
               Matrix([ [-1,  0, 0], [ 0, -1, 0], [ 0,  0, 1]]),
               Matrix([ [-1,  0,  0], [ 0, -1,  0], [ 0,  0, -1]]),
               Matrix([ [1, 0,  0], [0, 1,  0], [0, 0, -1]])],
  'MonoBase': [Matrix([ [1, 0, 0], [0, 1, 0], [0, 0, 1]]), 
               Matrix([ [-1,  0,  0], [ 0,  0, -1], [ 0, -1,  0]]),
               Matrix([ [-1,  0,  0], [ 0, -1,  0], [ 0,  0, -1]]),
               Matrix([ [1, 0, 0], [0, 0, 1], [0, 1, 0]])],
  'OrthPrim': [Matrix([ [1, 0, 0], [0, 1, 0], [0, 0, 1]]),
               Matrix([ [-1, 0,  0], [ 0, 1,  0], [ 0, 0, -1]]),
               Matrix([ [1,  0,  0], [0, -1,  0], [0,  0, -1]]),
               Matrix([ [-1,  0, 0], [ 0, -1, 0], [ 0,  0, 1]]),
               Matrix([ [-1,  0,  0], [ 0, -1,  0], [ 0,  0, -1]]),
               Matrix([ [1,  0, 0], [0, -1, 0], [0,  0, 1]]),
               Matrix([ [-1, 0, 0], [ 0, 1, 0], [ 0, 0, 1]]),
               Matrix([ [1, 0,  0], [0, 1,  0], [0, 0, -1]])],
  'OrthBase': [Matrix([ [1, 0, 0], [0, 1, 0], [0, 0, 1]]),
               Matrix([ [0, 1,  0], [1, 0,  0], [0, 0, -1]]),
               Matrix([ [ 0, -1,  0], [-1,  0,  0], [ 0,  0, -1]]),
               Matrix([ [-1,  0, 0], [ 0, -1, 0], [ 0,  0, 1]]),
               Matrix([ [-1,  0,  0], [ 0, -1,  0], [ 0,  0, -1]]),
               Matrix([ [ 0, -1, 0], [-1,  0, 0], [ 0,  0, 1]]), 
               Matrix([ [0, 1, 0],
   [1, 0, 0],
   [0, 0, 1]]),
   Matrix([
   [1, 0,  0],
   [0, 1,  0],
   [0, 0, -1]])],
  'OrthBody': [Matrix([
   [1, 0, 0],
   [0, 1, 0],
   [0, 0, 1]]),
   Matrix([
   [0, -1, 1],
   [0, -1, 0],
   [1, -1, 0]]),
   Matrix([
   [-1, 0, 0],
   [-1, 0, 1],
   [-1, 1, 0]]),
   Matrix([
   [0, 1, -1],
   [1, 0, -1],
   [0, 0, -1]]),
   Matrix([
   [-1,  0,  0],
   [ 0, -1,  0],
   [ 0,  0, -1]]),
   Matrix([
   [ 0, 1, -1],
   [ 0, 1,  0],
   [-1, 1,  0]]),
   Matrix([
   [1,  0,  0],
   [1,  0, -1],
   [1, -1,  0]]),
   Matrix([
   [ 0, -1, 1],
   [-1,  0, 1],
   [ 0,  0, 1]])],
  'OrthFace': [Matrix([
   [1, 0, 0],
   [0, 1, 0],
   [0, 0, 1]]),
   Matrix([
   [ 0,  0,  1],
   [-1, -1, -1],
   [ 1,  0,  0]]),
   Matrix([
   [-1, -1, -1],
   [ 0,  0,  1],
   [ 0,  1,  0]]),
   Matrix([
   [ 0,  1,  0],
   [ 1,  0,  0],
   [-1, -1, -1]]),
   Matrix([
   [-1,  0,  0],
   [ 0, -1,  0],
   [ 0,  0, -1]]),
   Matrix([
   [ 0, 0, -1],
   [ 1, 1,  1],
   [-1, 0,  0]]),
   Matrix([
   [1,  1,  1],
   [0,  0, -1],
   [0, -1,  0]]),
   Matrix([
   [ 0, -1, 0],
   [-1,  0, 0],
   [ 1,  1, 1]])],
  'TetrPrim': [Matrix([
   [1, 0, 0],
   [0, 1, 0],
   [0, 0, 1]]),
   Matrix([
   [0, -1, 0],
   [1,  0, 0],
   [0,  0, 1]]),
   Matrix([
   [-1,  0, 0],
   [ 0, -1, 0],
   [ 0,  0, 1]]),
   Matrix([
   [ 0, 1, 0],
   [-1, 0, 0],
   [ 0, 0, 1]]),
   Matrix([
   [1,  0,  0],
   [0, -1,  0],
   [0,  0, -1]]),
   Matrix([
   [-1, 0,  0],
   [ 0, 1,  0],
   [ 0, 0, -1]]),
   Matrix([
   [0, 1,  0],
   [1, 0,  0],
   [0, 0, -1]]),
   Matrix([
   [ 0, -1,  0],
   [-1,  0,  0],
   [ 0,  0, -1]]),
   Matrix([
   [-1,  0,  0],
   [ 0, -1,  0],
   [ 0,  0, -1]]),
   Matrix([
   [ 0, 1,  0],
   [-1, 0,  0],
   [ 0, 0, -1]]),
   Matrix([
   [1, 0,  0],
   [0, 1,  0],
   [0, 0, -1]]),
   Matrix([
   [0, -1,  0],
   [1,  0,  0],
   [0,  0, -1]]),
   Matrix([
   [-1, 0, 0],
   [ 0, 1, 0],
   [ 0, 0, 1]]),
   Matrix([
   [1,  0, 0],
   [0, -1, 0],
   [0,  0, 1]]),
   Matrix([
   [ 0, -1, 0],
   [-1,  0, 0],
   [ 0,  0, 1]]),
   Matrix([
   [0, 1, 0],
   [1, 0, 0],
   [0, 0, 1]])],
  'TetrBody': [Matrix([
   [1, 0, 0],
   [0, 1, 0],
   [0, 0, 1]]),
   Matrix([
   [ 0, 1,  0],
   [ 0, 1, -1],
   [-1, 1,  0]]),
   Matrix([
   [0, 1, -1],
   [1, 0, -1],
   [0, 0, -1]]),
   Matrix([
   [1,  0, -1],
   [1,  0,  0],
   [1, -1,  0]]),
   Matrix([
   [-1, 0, 0],
   [-1, 0, 1],
   [-1, 1, 0]]),
   Matrix([
   [0, -1, 1],
   [0, -1, 0],
   [1, -1, 0]]),
   Matrix([
   [-1,  0, 1],
   [ 0, -1, 1],
   [ 0,  0, 1]]),
   Matrix([
   [ 0, -1,  0],
   [-1,  0,  0],
   [ 0,  0, -1]]),
   Matrix([
   [-1,  0,  0],
   [ 0, -1,  0],
   [ 0,  0, -1]]),
   Matrix([
   [0, -1, 0],
   [0, -1, 1],
   [1, -1, 0]]),
   Matrix([
   [ 0, -1, 1],
   [-1,  0, 1],
   [ 0,  0, 1]]),
   Matrix([
   [-1, 0, 1],
   [-1, 0, 0],
   [-1, 1, 0]]),
   Matrix([
   [1,  0,  0],
   [1,  0, -1],
   [1, -1,  0]]),
   Matrix([
   [ 0, 1, -1],
   [ 0, 1,  0],
   [-1, 1,  0]]),
   Matrix([
   [1, 0, -1],
   [0, 1, -1],
   [0, 0, -1]]),
   Matrix([
   [0, 1, 0],
   [1, 0, 0],
   [0, 0, 1]])],
  'TrigPrim': [Matrix([
   [1, 0, 0],
   [0, 1, 0],
   [0, 0, 1]]),
   Matrix([
   [0, 0, 1],
   [1, 0, 0],
   [0, 1, 0]]),
   Matrix([
   [0, 1, 0],
   [0, 0, 1],
   [1, 0, 0]]),
   Matrix([
   [-1,  0,  0],
   [ 0,  0, -1],
   [ 0, -1,  0]]),
   Matrix([
   [ 0,  0, -1],
   [ 0, -1,  0],
   [-1,  0,  0]]),
   Matrix([
   [ 0, -1,  0],
   [-1,  0,  0],
   [ 0,  0, -1]]),
   Matrix([
   [-1,  0,  0],
   [ 0, -1,  0],
   [ 0,  0, -1]]),
   Matrix([
   [ 0,  0, -1],
   [-1,  0,  0],
   [ 0, -1,  0]]),
   Matrix([
   [ 0, -1,  0],
   [ 0,  0, -1],
   [-1,  0,  0]]),
   Matrix([
   [1, 0, 0],
   [0, 0, 1],
   [0, 1, 0]]),
   Matrix([
   [0, 0, 1],
   [0, 1, 0],
   [1, 0, 0]]),
   Matrix([
   [0, 1, 0],
   [1, 0, 0],
   [0, 0, 1]])],
  'HexaPrim': [Matrix([
   [1, 0, 0],
   [0, 1, 0],
   [0, 0, 1]]),
   Matrix([
   [1, -1, 0],
   [1,  0, 0],
   [0,  0, 1]]),
   Matrix([
   [0, -1, 0],
   [1, -1, 0],
   [0,  0, 1]]),
   Matrix([
   [-1,  0, 0],
   [ 0, -1, 0],
   [ 0,  0, 1]]),
   Matrix([
   [-1, 1, 0],
   [-1, 0, 0],
   [ 0, 0, 1]]),
   Matrix([
   [ 0, 1, 0],
   [-1, 1, 0],
   [ 0, 0, 1]]),
   Matrix([
   [-1, 1,  0],
   [ 0, 1,  0],
   [ 0, 0, -1]]),
   Matrix([
   [1,  0,  0],
   [1, -1,  0],
   [0,  0, -1]]),
   Matrix([
   [ 0, -1,  0],
   [-1,  0,  0],
   [ 0,  0, -1]]),
   Matrix([
   [1, -1,  0],
   [0, -1,  0],
   [0,  0, -1]]),
   Matrix([
   [-1, 0,  0],
   [-1, 1,  0],
   [ 0, 0, -1]]),
   Matrix([
   [0, 1,  0],
   [1, 0,  0],
   [0, 0, -1]]),
   Matrix([
   [-1,  0,  0],
   [ 0, -1,  0],
   [ 0,  0, -1]]),
   Matrix([
   [-1, 1,  0],
   [-1, 0,  0],
   [ 0, 0, -1]]),
   Matrix([
   [ 0, 1,  0],
   [-1, 1,  0],
   [ 0, 0, -1]]),
   Matrix([
   [1, 0,  0],
   [0, 1,  0],
   [0, 0, -1]]),
   Matrix([
   [1, -1,  0],
   [1,  0,  0],
   [0,  0, -1]]),
   Matrix([
   [0, -1,  0],
   [1, -1,  0],
   [0,  0, -1]]),
   Matrix([
   [1, -1, 0],
   [0, -1, 0],
   [0,  0, 1]]),
   Matrix([
   [-1, 0, 0],
   [-1, 1, 0],
   [ 0, 0, 1]]),
   Matrix([
   [0, 1, 0],
   [1, 0, 0],
   [0, 0, 1]]),
   Matrix([
   [-1, 1, 0],
   [ 0, 1, 0],
   [ 0, 0, 1]]),
   Matrix([
   [1,  0, 0],
   [1, -1, 0],
   [0,  0, 1]]),
   Matrix([
   [ 0, -1, 0],
   [-1,  0, 0],
   [ 0,  0, 1]])],
  'CubiPrim': [Matrix([
   [1, 0, 0],
   [0, 1, 0],
   [0, 0, 1]]),
   Matrix([
   [1,  0,  0],
   [0, -1,  0],
   [0,  0, -1]]),
   Matrix([
   [-1, 0,  0],
   [ 0, 1,  0],
   [ 0, 0, -1]]),
   Matrix([
   [-1,  0, 0],
   [ 0, -1, 0],
   [ 0,  0, 1]]),
   Matrix([
   [0, 0, 1],
   [1, 0, 0],
   [0, 1, 0]]),
   Matrix([
   [0,  0, -1],
   [1,  0,  0],
   [0, -1,  0]]),
   Matrix([
   [ 0, 0, -1],
   [-1, 0,  0],
   [ 0, 1,  0]]),
   Matrix([
   [ 0,  0, 1],
   [-1,  0, 0],
   [ 0, -1, 0]]),
   Matrix([
   [0, 1, 0],
   [0, 0, 1],
   [1, 0, 0]]),
   Matrix([
   [ 0, 1,  0],
   [ 0, 0, -1],
   [-1, 0,  0]]),
   Matrix([
   [ 0, -1, 0],
   [ 0,  0, 1],
   [-1,  0, 0]]),
   Matrix([
   [0, -1,  0],
   [0,  0, -1],
   [1,  0,  0]]),
   Matrix([
   [1, 0,  0],
   [0, 0, -1],
   [0, 1,  0]]),
   Matrix([
   [ 0, 0, 1],
   [ 0, 1, 0],
   [-1, 0, 0]]),
   Matrix([
   [0, -1, 0],
   [1,  0, 0],
   [0,  0, 1]]),
   Matrix([
   [1,  0, 0],
   [0,  0, 1],
   [0, -1, 0]]),
   Matrix([
   [0, 0, -1],
   [0, 1,  0],
   [1, 0,  0]]),
   Matrix([
   [ 0, 1, 0],
   [-1, 0, 0],
   [ 0, 0, 1]]),
   Matrix([
   [0, 1,  0],
   [1, 0,  0],
   [0, 0, -1]]),
   Matrix([
   [ 0, -1,  0],
   [-1,  0,  0],
   [ 0,  0, -1]]),
   Matrix([
   [0,  0, 1],
   [0, -1, 0],
   [1,  0, 0]]),
   Matrix([
   [-1, 0, 0],
   [ 0, 0, 1],
   [ 0, 1, 0]]),
   Matrix([
   [ 0,  0, -1],
   [ 0, -1,  0],
   [-1,  0,  0]]),
   Matrix([
   [-1,  0,  0],
   [ 0,  0, -1],
   [ 0, -1,  0]]),
   Matrix([
   [-1,  0,  0],
   [ 0, -1,  0],
   [ 0,  0, -1]]),
   Matrix([
   [-1, 0, 0],
   [ 0, 1, 0],
   [ 0, 0, 1]]),
   Matrix([
   [1,  0, 0],
   [0, -1, 0],
   [0,  0, 1]]),
   Matrix([
   [1, 0,  0],
   [0, 1,  0],
   [0, 0, -1]]),
   Matrix([
   [ 0,  0, -1],
   [-1,  0,  0],
   [ 0, -1,  0]]),
   Matrix([
   [ 0, 0, 1],
   [-1, 0, 0],
   [ 0, 1, 0]]),
   Matrix([
   [0,  0, 1],
   [1,  0, 0],
   [0, -1, 0]]),
   Matrix([
   [0, 0, -1],
   [1, 0,  0],
   [0, 1,  0]]),
   Matrix([
   [ 0, -1,  0],
   [ 0,  0, -1],
   [-1,  0,  0]]),
   Matrix([
   [0, -1, 0],
   [0,  0, 1],
   [1,  0, 0]]),
   Matrix([
   [0, 1,  0],
   [0, 0, -1],
   [1, 0,  0]]),
   Matrix([
   [ 0, 1, 0],
   [ 0, 0, 1],
   [-1, 0, 0]]),
   Matrix([
   [-1,  0, 0],
   [ 0,  0, 1],
   [ 0, -1, 0]]),
   Matrix([
   [0,  0, -1],
   [0, -1,  0],
   [1,  0,  0]]),
   Matrix([
   [ 0, 1,  0],
   [-1, 0,  0],
   [ 0, 0, -1]]),
   Matrix([
   [-1, 0,  0],
   [ 0, 0, -1],
   [ 0, 1,  0]]),
   Matrix([
   [ 0,  0, 1],
   [ 0, -1, 0],
   [-1,  0, 0]]),
   Matrix([
   [0, -1,  0],
   [1,  0,  0],
   [0,  0, -1]]),
   Matrix([
   [ 0, -1, 0],
   [-1,  0, 0],
   [ 0,  0, 1]]),
   Matrix([
   [0, 1, 0],
   [1, 0, 0],
   [0, 0, 1]]),
   Matrix([
   [ 0, 0, -1],
   [ 0, 1,  0],
   [-1, 0,  0]]),
   Matrix([
   [1,  0,  0],
   [0,  0, -1],
   [0, -1,  0]]),
   Matrix([
   [0, 0, 1],
   [0, 1, 0],
   [1, 0, 0]]),
   Matrix([
   [1, 0, 0],
   [0, 0, 1],
   [0, 1, 0]])],
  'CubiFace': [Matrix([
   [1, 0, 0],
   [0, 1, 0],
   [0, 0, 1]]),
   Matrix([
   [-1, -1, -1],
   [ 0,  0,  1],
   [ 0,  1,  0]]),
   Matrix([
   [ 0,  0,  1],
   [-1, -1, -1],
   [ 1,  0,  0]]),
   Matrix([
   [ 0,  1,  0],
   [ 1,  0,  0],
   [-1, -1, -1]]),
   Matrix([
   [0, 0, 1],
   [1, 0, 0],
   [0, 1, 0]]),
   Matrix([
   [ 0,  1,  0],
   [-1, -1, -1],
   [ 0,  0,  1]]),
   Matrix([
   [ 1,  0,  0],
   [ 0,  0,  1],
   [-1, -1, -1]]),
   Matrix([
   [-1, -1, -1],
   [ 0,  1,  0],
   [ 1,  0,  0]]),
   Matrix([
   [0, 1, 0],
   [0, 0, 1],
   [1, 0, 0]]),
   Matrix([
   [-1, -1, -1],
   [ 1,  0,  0],
   [ 0,  0,  1]]),
   Matrix([
   [ 1,  0,  0],
   [-1, -1, -1],
   [ 0,  1,  0]]),
   Matrix([
   [ 0,  0,  1],
   [ 0,  1,  0],
   [-1, -1, -1]]),
   Matrix([
   [ 0, -1, 0],
   [ 1,  1, 1],
   [-1,  0, 0]]),
   Matrix([
   [0, -1,  0],
   [0,  0, -1],
   [1,  1,  1]]),
   Matrix([
   [ 1, 1,  1],
   [ 0, 0, -1],
   [-1, 0,  0]]),
   Matrix([
   [ 0, 0, -1],
   [-1, 0,  0],
   [ 1, 1,  1]]),
   Matrix([
   [ 1,  1, 1],
   [-1,  0, 0],
   [ 0, -1, 0]]),
   Matrix([
   [0,  0, -1],
   [1,  1,  1],
   [0, -1,  0]]),
   Matrix([
   [-1,  0, 0],
   [ 0, -1, 0],
   [ 1,  1, 1]]),
   Matrix([
   [ 0, -1,  0],
   [-1,  0,  0],
   [ 0,  0, -1]]),
   Matrix([
   [-1, 0,  0],
   [ 1, 1,  1],
   [ 0, 0, -1]]),
   Matrix([
   [1,  1,  1],
   [0, -1,  0],
   [0,  0, -1]]),
   Matrix([
   [ 0,  0, -1],
   [ 0, -1,  0],
   [-1,  0,  0]]),
   Matrix([
   [-1,  0,  0],
   [ 0,  0, -1],
   [ 0, -1,  0]]),
   Matrix([
   [-1,  0,  0],
   [ 0, -1,  0],
   [ 0,  0, -1]]),
   Matrix([
   [1,  1,  1],
   [0,  0, -1],
   [0, -1,  0]]),
   Matrix([
   [ 0, 0, -1],
   [ 1, 1,  1],
   [-1, 0,  0]]),
   Matrix([
   [ 0, -1, 0],
   [-1,  0, 0],
   [ 1,  1, 1]]),
   Matrix([
   [ 0,  0, -1],
   [-1,  0,  0],
   [ 0, -1,  0]]),
   Matrix([
   [0, -1,  0],
   [1,  1,  1],
   [0,  0, -1]]),
   Matrix([
   [-1, 0,  0],
   [ 0, 0, -1],
   [ 1, 1,  1]]),
   Matrix([
   [ 1,  1, 1],
   [ 0, -1, 0],
   [-1,  0, 0]]),
   Matrix([
   [ 0, -1,  0],
   [ 0,  0, -1],
   [-1,  0,  0]]),
   Matrix([
   [ 1, 1,  1],
   [-1, 0,  0],
   [ 0, 0, -1]]),
   Matrix([
   [-1,  0, 0],
   [ 1,  1, 1],
   [ 0, -1, 0]]),
   Matrix([
   [0,  0, -1],
   [0, -1,  0],
   [1,  1,  1]]),
   Matrix([
   [ 0,  1,  0],
   [-1, -1, -1],
   [ 1,  0,  0]]),
   Matrix([
   [ 0,  1,  0],
   [ 0,  0,  1],
   [-1, -1, -1]]),
   Matrix([
   [-1, -1, -1],
   [ 0,  0,  1],
   [ 1,  0,  0]]),
   Matrix([
   [ 0,  0,  1],
   [ 1,  0,  0],
   [-1, -1, -1]]),
   Matrix([
   [-1, -1, -1],
   [ 1,  0,  0],
   [ 0,  1,  0]]),
   Matrix([
   [ 0,  0,  1],
   [-1, -1, -1],
   [ 0,  1,  0]]),
   Matrix([
   [ 1,  0,  0],
   [ 0,  1,  0],
   [-1, -1, -1]]),
   Matrix([
   [0, 1, 0],
   [1, 0, 0],
   [0, 0, 1]]),
   Matrix([
   [ 1,  0,  0],
   [-1, -1, -1],
   [ 0,  0,  1]]),
   Matrix([
   [-1, -1, -1],
   [ 0,  1,  0],
   [ 0,  0,  1]]),
   Matrix([
   [0, 0, 1],
   [0, 1, 0],
   [1, 0, 0]]),
   Matrix([
   [1, 0, 0],
   [0, 0, 1],
   [0, 1, 0]])],
  'CubiBody': [Matrix([
   [1, 0, 0],
   [0, 1, 0],
   [0, 0, 1]]),
   Matrix([
   [-1, 0, 0],
   [-1, 0, 1],
   [-1, 1, 0]]),
   Matrix([
   [0, -1, 1],
   [0, -1, 0],
   [1, -1, 0]]),
   Matrix([
   [0, 1, -1],
   [1, 0, -1],
   [0, 0, -1]]),
   Matrix([
   [0, 0, 1],
   [1, 0, 0],
   [0, 1, 0]]),
   Matrix([
   [-1, 1, 0],
   [-1, 0, 0],
   [-1, 0, 1]]),
   Matrix([
   [1, -1, 0],
   [0, -1, 1],
   [0, -1, 0]]),
   Matrix([
   [0, 0, -1],
   [0, 1, -1],
   [1, 0, -1]]),
   Matrix([
   [0, 1, 0],
   [0, 0, 1],
   [1, 0, 0]]),
   Matrix([
   [0, -1, 0],
   [1, -1, 0],
   [0, -1, 1]]),
   Matrix([
   [1, 0, -1],
   [0, 0, -1],
   [0, 1, -1]]),
   Matrix([
   [-1, 0, 1],
   [-1, 1, 0],
   [-1, 0, 0]]),
   Matrix([
   [ 0, -1, 1],
   [ 0,  0, 1],
   [-1,  0, 1]]),
   Matrix([
   [1, -1,  0],
   [1,  0, -1],
   [1,  0,  0]]),
   Matrix([
   [ 0, 1,  0],
   [ 0, 1, -1],
   [-1, 1,  0]]),
   Matrix([
   [ 0, 1, -1],
   [-1, 1,  0],
   [ 0, 1,  0]]),
   Matrix([
   [ 0,  0, 1],
   [-1,  0, 1],
   [ 0, -1, 1]]),
   Matrix([
   [1,  0, -1],
   [1,  0,  0],
   [1, -1,  0]]),
   Matrix([
   [-1,  0, 1],
   [ 0, -1, 1],
   [ 0,  0, 1]]),
   Matrix([
   [ 0, -1,  0],
   [-1,  0,  0],
   [ 0,  0, -1]]),
   Matrix([
   [-1, 1,  0],
   [ 0, 1,  0],
   [ 0, 1, -1]]),
   Matrix([
   [1,  0,  0],
   [1, -1,  0],
   [1,  0, -1]]),
   Matrix([
   [ 0,  0, -1],
   [ 0, -1,  0],
   [-1,  0,  0]]),
   Matrix([
   [-1,  0,  0],
   [ 0,  0, -1],
   [ 0, -1,  0]]),
   Matrix([
   [-1,  0,  0],
   [ 0, -1,  0],
   [ 0,  0, -1]]),
   Matrix([
   [1,  0,  0],
   [1,  0, -1],
   [1, -1,  0]]),
   Matrix([
   [ 0, 1, -1],
   [ 0, 1,  0],
   [-1, 1,  0]]),
   Matrix([
   [ 0, -1, 1],
   [-1,  0, 1],
   [ 0,  0, 1]]),
   Matrix([
   [ 0,  0, -1],
   [-1,  0,  0],
   [ 0, -1,  0]]),
   Matrix([
   [1, -1,  0],
   [1,  0,  0],
   [1,  0, -1]]),
   Matrix([
   [-1, 1,  0],
   [ 0, 1, -1],
   [ 0, 1,  0]]),
   Matrix([
   [ 0,  0, 1],
   [ 0, -1, 1],
   [-1,  0, 1]]),
   Matrix([
   [ 0, -1,  0],
   [ 0,  0, -1],
   [-1,  0,  0]]),
   Matrix([
   [ 0, 1,  0],
   [-1, 1,  0],
   [ 0, 1, -1]]),
   Matrix([
   [-1,  0, 1],
   [ 0,  0, 1],
   [ 0, -1, 1]]),
   Matrix([
   [1,  0, -1],
   [1, -1,  0],
   [1,  0,  0]]),
   Matrix([
   [0, 1, -1],
   [0, 0, -1],
   [1, 0, -1]]),
   Matrix([
   [-1, 1, 0],
   [-1, 0, 1],
   [-1, 0, 0]]),
   Matrix([
   [0, -1, 0],
   [0, -1, 1],
   [1, -1, 0]]),
   Matrix([
   [0, -1, 1],
   [1, -1, 0],
   [0, -1, 0]]),
   Matrix([
   [0, 0, -1],
   [1, 0, -1],
   [0, 1, -1]]),
   Matrix([
   [-1, 0, 1],
   [-1, 0, 0],
   [-1, 1, 0]]),
   Matrix([
   [1, 0, -1],
   [0, 1, -1],
   [0, 0, -1]]),
   Matrix([
   [0, 1, 0],
   [1, 0, 0],
   [0, 0, 1]]),
   Matrix([
   [1, -1, 0],
   [0, -1, 0],
   [0, -1, 1]]),
   Matrix([
   [-1, 0, 0],
   [-1, 1, 0],
   [-1, 0, 1]]),
   Matrix([
   [0, 0, 1],
   [0, 1, 0],
   [1, 0, 0]]),
   Matrix([
   [1, 0, 0],
   [0, 0, 1],
   [0, 1, 0]])]})

u=symbols('u')
BCHighSymKpt={}
BCHighSymKpt["TricPrim"]=[
    ["Gamma","",Matrix(["0","0","0"]),"Ci",["E","I"]],
    ["B","",Matrix(["1/2","0","0"]),"Ci",["E","I"]],
    ["F","",Matrix(["0","1/2","0"]),"Ci",["E","I"]],
    ["G","",Matrix(["0","0","1/2"]),"Ci",["E","I"]]
]
BCHighSymKpt["MonoPrim"]=[
    ["Gamma","",Matrix(["0","0","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["B","",Matrix(["-1/2","0","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["Y","",Matrix(["0","1/2","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["Z","",Matrix(["0","0","1/2"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["C","",Matrix(["0","1/2","1/2"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["D","",Matrix(["-1/2","0","1/2"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["A","",Matrix(["1/2","1/2","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["E","",Matrix(["1/2","1/2","1/2"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["Lambda","GammaZ",Matrix(["0","0","u"]),"C2",["E","C2z"]],
    ["V","BD",Matrix(["-1/2","0","u"]),"C2",["E","C2z"]],
    ["W","YC",Matrix(["0","1/2","u"]),"C2",["E","C2z"]],
    ["U","AE",Matrix(["1/2","1/2","u"]),"C2",["E","C2z"]]
]
BCHighSymKpt["MonoBase"]=[
    ["Gamma","",Matrix(["0","0","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["A","",Matrix(["-1/2","0","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["Z","",Matrix(["0","-1/2","1/2"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["M","",Matrix(["-1/2","-1/2","1/2"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["L","",Matrix(["-1/2","0","1/2"]),"Ci",["E","I"]],
    ["V","",Matrix(["0","0","1/2"]),"Ci",["E","I"]],
    ["Lambda","GammaZ",Matrix(["0","-u","u"]),"C2",["E","C2z"]],
    ["U","AM",Matrix(["-1/2","-u","u"]),"C2",["E","C2z"]]
];
D2hxyz=["E","C2x","C2y","C2z","I","Sigmax","Sigmay","Sigmaz"];
C2vx=["E","C2x","Sigmay","Sigmaz"];
C2vy=["E","C2y","Sigmaz","Sigmax"];
C2vz=["E","C2z","Sigmax","Sigmay"];
BCHighSymKpt["OrthPrim"]=[
    ["Gamma","",Matrix(["0","0","0"]),"D2h",D2hxyz],
    ["Y","",Matrix(["-1/2","0","0"]),"D2h",D2hxyz],
    ["X","",Matrix(["0","1/2","0"]),"D2h",D2hxyz],
    ["Z","",Matrix(["0","0","1/2"]),"D2h",D2hxyz],
    ["U","",Matrix(["0","1/2","1/2"]),"D2h",D2hxyz],
    ["T","",Matrix(["-1/2","0","1/2"]),"D2h",D2hxyz],
    ["S","",Matrix(["-1/2","1/2","0"]),"D2h",D2hxyz],
    ["R","",Matrix(["-1/2","1/2","1/2"]),"D2h",D2hxyz],
    ["Delta","GammaY",Matrix(["-u","0","0"]),"C2v",C2vy],
    ["D","XS",Matrix(["-u","1/2","0"]),"C2v",C2vy],
    ["P","UR",Matrix(["-u","1/2","1/2"]),"C2v",C2vy],
    ["B","ZT",Matrix(["-u","0","1/2"]),"C2v",C2vy],
    ["Sigma","GammaX",Matrix(["0","u","0"]),"C2v",C2vx],
    ["C","YS",Matrix(["-1/2","u","0"]),"C2v",C2vx],
    ["E","TR",Matrix(["-1/2","u","1/2"]),"C2v",C2vx],
    ["A","ZU",Matrix(["0","u","1/2"]),"C2v",C2vx],
    ["Lambda","GammaZ",Matrix(["0","0","u"]),"C2v",C2vz],
    ["H","YT",Matrix(["-1/2","0","u"]),"C2v",C2vz],
    ["Q","SR",Matrix(["-1/2","1/2","u"]),"C2v",C2vz],
    ["G","XU",Matrix(["0","1/2","u"]),"C2v",C2vz]
];
BCHighSymKpt["OrthBase(a)"]=[
    ["Gamma","",Matrix(["0","0","0"]),"D2h",D2hxyz],
    ["Y","",Matrix(["1/2","1/2","0"]),"D2h",D2hxyz],
    ["Z","",Matrix(["0","0","1/2"]),"D2h",D2hxyz],
    ["T","",Matrix(["1/2","1/2","1/2"]),"D2h",D2hxyz],
    ["S","",Matrix(["0","1/2","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["R","",Matrix(["0","1/2","1/2"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["Lambda","GammaZ",Matrix(["0","0","u"]),"C2v",C2vz],
    ["H","YT",Matrix(["1/2","1/2","u"]),"C2v",C2vz],
    ["D","SR",Matrix(["0","1/2","u"]),"C2",["E","C2z"]],
    ["A","ZT",Matrix(["u","u","1/2"]),"C2v",C2vx],
    ["Sigma","GammaY",Matrix(["u","u","0"]),"C2v",C2vx],
    ["Delta","GammaDelta",Matrix(["-u","u","0"]),"C2v",C2vy],
    ["B","ZB",Matrix(["-u","u","1/2"]),"C2v",C2vy],
    ["G","TG",Matrix(["1/2-u","1/2+u","1/2"]),"C2v",C2vy],
    ["F","YF",Matrix(["1/2-u","1/2+u","0"]),"C2v",C2vy]
];
BCHighSymKpt["OrthBase(b)"]=[
    ["Gamma","",Matrix(["0","0","0"]),"D2h",D2hxyz],
    ["Y","",Matrix(["-1/2","1/2","0"]),"D2h",D2hxyz],
    ["Z","",Matrix(["0","0","1/2"]),"D2h",D2hxyz],
    ["T","",Matrix(["-1/2","1/2","1/2"]),"D2h",D2hxyz],
    ["S","",Matrix(["0","1/2","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["R","",Matrix(["0","1/2","1/2"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["Lambda","GammaZ",Matrix(["0","0","u"]),"C2v",C2vz],
    ["H","YT",Matrix(["-1/2","1/2","u"]),"C2v",C2vz],
    ["D","SR",Matrix(["0","1/2","u"]),"C2",["E","C2z"]],
    ["A","GammaA",Matrix(["u","u","1/2"]),"C2v",C2vx],
    ["Sigma","GammaSigma",Matrix(["u","u","0"]),"C2v",C2vx],
    ["Delta","GammaY",Matrix(["-u","u","0"]),"C2v",C2vy],
    ["B","ZT",Matrix(["-u","u","1/2"]),"C2v",C2vy],
    ["E","TE",Matrix(["-1/2+u","1/2+u","1/2"]),"C2v",C2vx],
    ["C","YC",Matrix(["-1/2+u","1/2+u","0"]),"C2v",C2vx]
];
BCHighSymKpt["OrthBody(a)"]=[
    ["Gamma","",Matrix(["0","0","0"]),"D2h",D2hxyz],
    ["X","",Matrix(["1/2","-1/2","1/2"]),"D2h",D2hxyz],
    ["R","",Matrix(["1/2","0","0"]),"C2h",["E","C2y","I","Sigmay"]],
    ["S","",Matrix(["1/2","0","-1/2"]),"C2h",["E","C2x","I","Sigmax"]],
    ["T","",Matrix(["1/2","-1/2","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["W","",Matrix(["3/4","-1/4","-1/4"]),"D2",["E","C2x","C2y","C2z"]],
    ["Lambda","GammaLambda",Matrix(["u","u","-u"]),"C2v",C2vz],
    ["G","XG",Matrix(["1/2+u","-1/2+u","1/2-u"]),"C2v",C2vz],
    ["P","TW",Matrix(["1/2+u","-1/2+u","-u"]),"C2",["E","C2z"]],
    ["Sigma","GammaX",Matrix(["u","-u","u"]),"C2v",C2vx],
    ["D","SW",Matrix(["1/2+u","-u","-1/2+u"]),"C2",["E","C2x"]],
    ["Delta","GammaDelta",Matrix(["u","-u","-u"]),"C2v",C2vy],
    ["U","XU",Matrix(["1/2+u","-1/2-u","1/2-u"]),"C2v",C2vy],
    ["Q","RW",Matrix(["1/2+u","-u","-u"]),"C2",["E","C2y"]]
];
BCHighSymKpt["OrthBody(b)"]=[
    ["Gamma","",Matrix(["0","0","0"]),"D2h",D2hxyz],
    ["X","",Matrix(["1/2","-1/2","-1/2"]),"D2h",D2hxyz],
    ["R","",Matrix(["1/2","0","0"]),"C2h",["E","C2y","I","Sigmay"]],
    ["S","",Matrix(["1/2","0","-1/2"]),"C2h",["E","C2x","I","Sigmax"]],
    ["T","",Matrix(["1/2","-1/2","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["W","",Matrix(["3/4","-1/4","-1/4"]),"D2",["E","C2x","C2y","C2z"]],
    ["Lambda","GammaLambda",Matrix(["u","u","-u"]),"C2v",C2vz],
    ["G","XG",Matrix(["1/2+u","-1/2+u","-1/2-u"]),"C2v",C2vz],
    ["P","TW",Matrix(["1/2+u","-1/2+u","-u"]),"C2",["E","C2z"]],
    ["Sigma","GammaSigma",Matrix(["u","-u","u"]),"C2v",C2vx],
    ["D","SW",Matrix(["1/2+u","-u","-1/2+u"]),"C2",["E","C2x"]],
    ["Delta","GammaX",Matrix(["u","-u","-u"]),"C2v",C2vy],
    ["F","XF",Matrix(["1/2+u","-1/2-u","-1/2+u"]),"C2v",C2vx],
    ["Q","RW",Matrix(["1/2+u","-u","-u"]),"C2",["E","C2y"]]
];
BCHighSymKpt["OrthBody(c)"]=[
    ["Gamma","",Matrix(["0","0","0"]),"D2h",D2hxyz],
    ["X","",Matrix(["1/2","1/2","-1/2"]),"D2h",D2hxyz],
    ["R","",Matrix(["1/2","0","0"]),"C2h",["E","C2y","I","Sigmay"]],
    ["S","",Matrix(["1/2","0","-1/2"]),"C2h",["E","C2x","I","Sigmax"]],
    ["T","",Matrix(["1/2","-1/2","0"]),"C2h",["E","C2z","I","Sigmaz"]],
    ["W","",Matrix(["3/4","-1/4","-1/4"]),"D2",["E","C2x","C2y","C2z"]],
    ["Lambda","GammaX",Matrix(["u","u","-u"]),"C2v",C2vz],
    ["F","XF",Matrix(["1/2+u","1/2-u","-1/2+u"]),"C2v",C2vx],
    ["P","TW",Matrix(["1/2+u","-1/2+u","-u"]),"C2",["E","C2z"]],
    ["Sigma","GammaSigma",Matrix(["u","-u","u"]),"C2v",C2vx],
    ["D","SW",Matrix(["1/2+u","-u","-1/2+u"]),"C2",["E","C2x"]],
    ["Delta","GammaDelta",Matrix(["u","-u","-u"]),"C2v",C2vy],
    ["U","XU",Matrix(["1/2+u","1/2-u","-1/2-u"]),"C2v",C2vy],
    ["Q","RW",Matrix(["1/2+u","-u","-u"]),"C2",["E","C2y"]]
];
BCHighSymKpt["OrthFace(a)"]=[
    ["Gamma","",Matrix(["0","0","0"]),"D2h",D2hxyz],
    ["Y","",Matrix(["0","-1/2","-1/2"]),"D2h",D2hxyz],
    ["X","",Matrix(["1/2","0","1/2"]),"D2h",D2hxyz],
    ["Z","",Matrix(["1/2","1/2","0"]),"D2h",D2hxyz],
    ["L","",Matrix(["1/2","0","0"]),"Ci",["E","I"]],
    ["Lambda","GammaZ",Matrix(["u","u","0"]),"C2v",C2vz],
    ["G","XG",Matrix(["1/2+u","u","1/2"]),"C2v",C2vz],
    ["H","YH",Matrix(["u","-1/2+u","-1/2"]),"C2v",C2vz],
    ["Sigma","GammaX",Matrix(["u","0","u"]),"C2v",C2vx],
    ["C","YC",Matrix(["u","-1/2","-1/2+u"]),"C2v",C2vx],
    ["A","ZA",Matrix(["1/2+u","1/2","u"]),"C2v",C2vx],
    ["Delta","GammaY",Matrix(["0","-u","-u"]),"C2v",C2vy],
    ["D","XD",Matrix(["1/2","-u","1/2-u"]),"C2v",C2vy],
    ["B","ZB",Matrix(["1/2","1/2-u","-u"]),"C2v",C2vy]
];
BCHighSymKpt["OrthFace(b)"]=[
    ["Gamma","",Matrix(["0","0","0"]),"D2h",D2hxyz],
    ["Y","",Matrix(["0","-1/2","-1/2"]),"D2h",D2hxyz],
    ["X","",Matrix(["1/2","0","1/2"]),"D2h",D2hxyz],
    ["Z","",Matrix(["1/2","-1/2","0"]),"D2h",D2hxyz],
    ["L","",Matrix(["1/2","0","0"]),"Ci",["E","I"]],
    ["Lambda","GammaZ",Matrix(["u","u","0"]),"C2v",C2vz],
    ["G","XG",Matrix(["1/2+u","u","1/2"]),"C2v",C2vz],
    ["H","YH",Matrix(["u","-1/2+u","-1/2"]),"C2v",C2vz],
    ["Q","ZQ",Matrix(["1/2+u","-1/2+u","0"]),"C2v",C2vz],
    ["Sigma","GammaX",Matrix(["u","0","u"]),"C2v",C2vx],
    ["C","YZ",Matrix(["u","-1/2","-1/2+u"]),"C2v",C2vx],
    ["Delta","GammaY",Matrix(["0","-u","-u"]),"C2v",C2vy],
    ["D","XZ",Matrix(["1/2","-u","1/2-u"]),"C2v",C2vy]
];
BCHighSymKpt["OrthFace(c)"]=[
    ["Gamma","",Matrix(["0","0","0"]),"D2h",D2hxyz],
    ["Y","",Matrix(["1","1/2","1/2"]),"D2h",D2hxyz],
    ["X","",Matrix(["1/2","0","1/2"]),"D2h",D2hxyz],
    ["Z","",Matrix(["1/2","1/2","0"]),"D2h",D2hxyz],
    ["L","",Matrix(["1/2","0","0"]),"Ci",["E","I"]],
    ["Lambda","GammaZ",Matrix(["u","u","0"]),"C2v",C2vz],
    ["G","XY",Matrix(["1/2+u","u","1/2"]),"C2v",C2vz],
    ["Sigma","GammaX",Matrix(["u","0","u"]),"C2v",C2vx],
    ["A","ZY",Matrix(["1/2+u","1/2","u"]),"C2v",C2vx],
    ["Delta","GammaY",Matrix(["0","-u","-u"]),"C2v",C2vy],
    ["D","XD",Matrix(["1/2","-u","1/2-u"]),"C2v",C2vy],
    ["B","ZB",Matrix(["1/2","1/2-u","-u"]),"C2v",C2vy],
    ["R","YR",Matrix(["1","1/2-u","1/2-u"]),"C2v",C2vy]
];
BCHighSymKpt["OrthFace(d)"]=[
    ["Gamma","",Matrix(["0","0","0"]),"D2h",D2hxyz],
    ["Y","",Matrix(["0","-1/2","-1/2"]),"D2h",D2hxyz],
    ["X","",Matrix(["1/2","0","-1/2"]),"D2h",D2hxyz],
    ["Z","",Matrix(["1/2","1/2","0"]),"D2h",D2hxyz],
    ["L","",Matrix(["1/2","0","0"]),"Ci",["E","I"]],
    ["Lambda","GammaZ",Matrix(["u","u","0"]),"C2v",C2vz],
    ["H","YX",Matrix(["u","-1/2+u","-1/2"]),"C2v",C2vz],
    ["Sigma","GammaSigma",Matrix(["u","0","u"]),"C2v",C2vx],
    ["C","YC",Matrix(["u","-1/2","-1/2+u"]),"C2v",C2vx],
    ["A","ZA",Matrix(["1/2+u","1/2","u"]),"C2v",C2vx],
    ["U","XU",Matrix(["1/2+u","0","-1/2+u"]),"C2v",C2vx],
    ["Delta","GammaY",Matrix(["0","-u","-u"]),"C2v",C2vy],
    ["B","ZX",Matrix(["1/2","1/2-u","-u"]),"C2v",C2vy]
];

D4hz=["E","C4z+","C4z-","C2z","C2x","C2y","C2a","C2b","I","S4z-","S4z+","Sigmaz","Sigmax","Sigmay","Sigmada","Sigmadb"];
C4vz=["E","C4z+","C4z-","C2z","Sigmax","Sigmay","Sigmada","Sigmadb"];
C2vazb=["E","C2a","Sigmaz","Sigmadb"];
BCHighSymKpt["TetrPrim"]=[ 
    ["Gamma","",Matrix(["0","0","0"]),"D4h",D4hz],
    ["M","",Matrix(["1/2","1/2","0"]),"D4h",D4hz],
    ["Z","",Matrix(["0","0","1/2"]),"D4h",D4hz],
    ["A","",Matrix(["1/2","1/2","1/2"]),"D4h",D4hz],
    ["R","",Matrix(["0","1/2","1/2"]),"D2h",D2hxyz],
    ["X","",Matrix(["0","1/2","0"]),"D2h",D2hxyz],
    ["Delta","GammaX",Matrix(["0","u","0"]),"C2v",C2vy],
    ["U","ZR",Matrix(["0","u","1/2"]),"C2v",C2vy],
    ["Lambda","GammaZ",Matrix(["0","0","u"]),"C4v",C4vz],
    ["V","MA",Matrix(["1/2","1/2","u"]),"C4v",C4vz],
    ["Sigma","GammaM",Matrix(["u","u","0"]),"C2v",C2vazb],
    ["S","ZA",Matrix(["u","u","1/2"]),"C2v",C2vazb],
    ["Y","XM",Matrix(["u","1/2","0"]),"C2v",C2vx],
    ["T","RA",Matrix(["u","1/2","1/2"]),"C2v",C2vx],
    ["W","XR",Matrix(["0","1/2","u"]),"C2v",C2vz]
];
D2hzab=["E","C2z","C2a","C2b","I","Sigmaz","Sigmada","Sigmadb"];
C2vzab=["E","C2z","Sigmada","Sigmadb"];
C2vbza=["E","C2b","Sigmaz","Sigmada"];
BCHighSymKpt["TetrBody(a)"]=[ 
    ["Gamma","",Matrix(["0","0","0"]),"D4h",D4hz],
    ["N","",Matrix(["0","1/2","0"]),"C2h",["E","C2y","I","Sigmay"]],
    ["X","",Matrix(["0","0","1/2"]),"C2h",D2hzab],
    ["Z","",Matrix(["-1/2","1/2","1/2"]),"D4h",D4hz],
    ["P","",Matrix(["1/4","1/4","1/4"]),"D2d",["E","C2x","C2y","C2z","Sigmada","Sigmadb","S4z-","S4z+"]],
    ["Lambda","GammaLambda",Matrix(["u","u","-u"]),"C4v",C4vz],
    ["V","ZV",Matrix(["-1/2+u","1/2+u","1/2-u"]),"C4v",C4vz],
    ["W","XP",Matrix(["u","u","1/2-u"]),"C2v",C2vzab],
    ["Sigma","GammaZ",Matrix(["-u","u","u"]),"C2v",C2vx],
    ["Q","NP",Matrix(["u","1/2-u","u"]),"C2",["E","C2y"]],
    ["Delta","GammaX",Matrix(["0","0","u"]),"C2v",C2vazb],
    ["Y","XZ",Matrix(["-u","u","1/2"]),"C2v",C2vbza]
];

BCHighSymKpt["TetrBody(b)"]=[ 
    ["Gamma","",Matrix(["0","0","0"]),"D4h",D4hz],
    ["N","",Matrix(["0","1/2","0"]),"C2h",["E","C2y","I","Sigmay"]],
    ["X","",Matrix(["0","0","1/2"]),"C2h",D2hzab],
    ["Z","",Matrix(["1/2","1/2","-1/2"]),"D4h",D4hz],
    ["P","",Matrix(["1/4","1/4","1/4"]),"D2d",["E","C2x","C2y","C2z","Sigmada","Sigmadb","S4z-","S4z+"]],
    ["Lambda","GammaZ",Matrix(["u","u","-u"]),"C4v",C4vz],
    ["W","XP",Matrix(["u","u","1/2-u"]),"C2v",C2vzab],
    ["Sigma","GammaSigma",Matrix(["-u","u","u"]),"C2v",C2vx],
    ["F","ZF",Matrix(["1/2-u","1/2+u","-1/2+u"]),"C2v",C2vx],  
    ["Q","NP",Matrix(["u","1/2-u","u"]),"C2",["E","C2y"]],
    ["Delta","GammaX",Matrix(["0","0","u"]),"C2v",C2vazb],
    ["U","ZU",Matrix(["1/2","1/2","-1/2+u"]),"C2v",C2vazb], 
    ["Y","XY",Matrix(["-u","u","1/2"]),"C2v",C2vbza]
];
D3d=["E","C3+","C3-","C21p","C22p","C23p","I","S6-","S6+","Sigmad1","Sigmad2","Sigmad3"];
BCHighSymKpt["TrigPrim(a)"]=[ 
    ["Gamma","",Matrix(["0","0","0"]),"D3d",D3d],
    ["Z","",Matrix(["1/2","1/2","-1/2"]),"D3d",D3d],
    ["L","",Matrix(["0","1/2","0"]),"C2h",["E","C22p","I","Sigmad2"]],
    ["F","",Matrix(["0","1/2","-1/2"]),"C2h",["E","C21p","I","Sigmad1"]],
    ["Lambda","GammaLambda",Matrix(["u","u","u"]),"C3v",["E","C3+","C3-","Sigmad1","Sigmad2","Sigmad3"]],
    ["P","ZP",Matrix(["1/2-u","1/2-u","-1/2-u"]),"C3v",["E","C3+","C3-","Sigmad1","Sigmad2","Sigmad3"]],
    ["Sigma","GammaF",Matrix(["0","u","-u"]),"C2",["E","C21p"]],
    ["Y","LZ",Matrix(["u","1/2","-u"]),"C2",["E","C22p"]]
];
BCHighSymKpt["TrigPrim(b)"]=[ 
    ["Gamma","",Matrix(["0","0","0"]),"D3d",D3d],
    ["Z","",Matrix(["1/2","1/2","1/2"]),"D3d",D3d],
    ["L","",Matrix(["0","1/2","0"]),"C2h",["E","C22p","I","Sigmad2"]],
    ["F","",Matrix(["1/2","1/2","0"]),"C2h",["E","C23p","I","Sigmad3"]],
    ["Lambda","GammaZ",Matrix(["u","u","u"]),"C3v",["E","C3+","C3-","Sigmad1","Sigmad2","Sigmad3"]],
    ["B","ZB",Matrix(["1/2","1/2+u","1/2-u"]),"C2",["E","C21p"]], 
    ["Sigma","GammaSigma",Matrix(["0","u","-u"]),"C2",["E","C21p"]],
    ["Q","FQ",Matrix(["1/2-u","1/2+u","0"]),"C2",["E","C23p"]], 
    ["Y","LY",Matrix(["u","1/2","-u"]),"C2",["E","C22p"]]
];

D6h=[op[0] for op in JonesSymbol[1]];
D3h=["E","C3+","C3-","C21pp","C22pp","c23pp","Sigmah","S3+","S3-","Sigmad1","Sigmad2","Sigmad3"];
C6v=["E","C6+","C6-","C3+","C3-","C2","Sigmav1","Sigmav2","Sigmav3","Sigmad1","Sigmad2","Sigmad3"];
BCHighSymKpt["HexaPrim"]=[ 
    ["Gamma","",Matrix(["0","0","0"]),"D6h",D6h],
    ["M","",Matrix(["0","1/2","0"]),"D2h",["E","C2","C21p","C21pp","I","Sigmah","Sigmad1","Sigmav1"]],
    ["A","",Matrix(["0","0","1/2"]),"D6h",D6h],
    ["L","",Matrix(["0","1/2","1/2"]),"D2h",["E","C2","C21p","C21pp","I","Sigmah","Sigmad1","Sigmav1"]],
    ["K","",Matrix(["-1/3","2/3","0"]),"D3h",D3h],
    ["H","",Matrix(["-1/3","2/3","1/2"]),"D3h",D3h],
    ["Delta","GammaA",Matrix(["0","0","u"]),"C6v",C6v],
    ["U","ML",Matrix(["0","1/2","u"]),"C2v",["E","C2","Sigmav1","Sigmad1"]],
    ["P","KH",Matrix(["-1/3","2/3","u"]),"C3v",["E","C3+","C3-","Sigmad1","Sigmad2","Sigmad3"]],
    ["T","GammaK",Matrix(["-u","2*u","0"]),"C2v",["E","C22pp","Sigmah","Sigmad2"]],
    ["S","AH",Matrix(["-u","2*u","1/2"]),"C2v",["E","C22pp","Sigmah","Sigmad2"]],
    ["T'","MK",Matrix(["-2*u","1/2+u","0"]),"C2v",["E","C21pp","Sigmah","Sigmad1"]],
    ["S'","LH",Matrix(["-2*u","1/2+u","1/2"]),"C2v",["E","C21pp","Sigmah","Sigmad1"]],
    ["Sigma","GammaM",Matrix(["0","u","0"]),"C2v",["E","C21p","Sigmah","Sigmav1"]],
    ["R","AL",Matrix(["0","u","1/2"]),"C2v",["E","C21p","Sigmah","Sigmav1"]]
];


Oh=[op[0] for op in JonesSymbol[0]];
D4hy=["E","C4y+","C4y-","C2y","C2x","C2z","C2c","C2e","I","S4y-","S4y+","Sigmay","Sigmax","Sigmaz","Sigmadc","Sigmade"];
C4vy=["E","C4y+","C4y-","C2y","Sigmax","Sigmaz","Sigmadc","Sigmade"];
BCHighSymKpt["CubiPrim"]=[ 
    ["Gamma","",Matrix(["0","0","0"]),"Oh",Oh],
    ["X","",Matrix(["0","1/2","0"]),"D4h",D4hy],
    ["M","",Matrix(["1/2","1/2","0"]),"D4h",D4hz],
    ["R","",Matrix(["1/2","1/2","1/2"]),"Oh",Oh],
    ["Delta","GammaX",Matrix(["0","u","0"]),"C4v",C4vy],
    ["Sigma","GammaM",Matrix(["u","u","0"]),"C2v",C2vazb],
    ["Lambda","GammaR",Matrix(["u","u","u"]),"C3v",["E","C31+","C31-","Sigmadb","Sigmade","Sigmadf"]],
    ["S","XR",Matrix(["u","1/2","u"]),"C2v",["E","C2c","Sigmade","Sigmay"]],
    ["Z","XM",Matrix(["u","1/2","0"]),"C2v",C2vx],
    ["T","MR",Matrix(["1/2","1/2","u"]),"C4v",C4vz]
];


BCHighSymKpt["CubiFace"]=[ 
    ["Gamma","",Matrix(["0","0","0"]),"Oh",Oh],
    ["X","",Matrix(["1/2","0","1/2"]),"D4h",D4hy],
    ["L","",Matrix(["1/2","1/2","1/2"]),"D3d",["E","C31+","C31-","C2b","C2e","C2f","I","S6-","S6+","Sigmadb","Sigmade","Sigmadf"]],
    ["W","",Matrix(["1/2","1/4","3/4"]),"D2d",["E","C2x","C2d","C2f","Sigmay","Sigmaz","S4x+","S4x-"]],
    ["Delta","GammaX",Matrix(["u","0","u"]),"C4v",C4vy],
    ["Lambda","GammaL",Matrix(["u","u","u"]),"C3v",["E","C31+","C31-","Sigmadb","Sigmade","Sigmadf"]],
    ["Sigma","GammaSigma",Matrix(["u","u","2*u"]),"C2v",C2vazb],
    ["S","XS",Matrix(["1/2+u","2*u","1/2+u"]),"C2v",["E","C2c","Sigmade","Sigmay"]],
    ["Z","XW",Matrix(["1/2","u","1/2+u"]),"C2v",C2vx],
    ["Q","LW",Matrix(["1/2","1/2-u","1/2+u"]),"C2",["E","C2f"]]
];

BCHighSymKpt["CubiBody"]=[ 
    ["Gamma","",Matrix(["0","0","0"]),"Oh",Oh],
    ["H","",Matrix(["1/2","-1/2","1/2"]),"Oh",Oh],
    ["P","",Matrix(["1/4","1/4","1/4"]),"Td",["E","C31+","C31-","C32+","C32-","C33+","C33-","C34+","C34-","C2x","C2y","C2z","S4x+","S4x-","S4y+","S4y-","S4z+","S4z-","Sigmada","Sigmadb","Sigmadc","Sigmadd","Sigmade","Sigmadf"]],
    ["N","",Matrix(["0","0","1/2"]),"D2h",["E","C2a","C2z","C2b","I","Sigmada","Sigmaz","Sigmadb"]],
    ["Sigma","GammaN",Matrix(["0","0","u"]),"C2v",C2vazb],
    ["Delta","GammaH",Matrix(["u","-u","u"]),"C4v",C4vy],
    ["Lambda","GammaP",Matrix(["u","u","u"]),"C3v",["E","C31+","C31-","Sigmadb","Sigmade","Sigmadf"]],
    ["D","NP",Matrix(["u","u","1/2-u"]),"C2v",C2vzab],
    ["G","HN",Matrix(["u","-u","1/2"]),"C2v",C2vbza],
    ["F","PH",Matrix(["1/4+u","1/4-3*u","1/4+u"]),"C3v",["E","C34+","C34-","Sigmada","Sigmadd","Sigmade"]]
];

a, b, c, alpha, gamma, beta= symbols('a b c alpha gamma beta')

SGGenElem={1: [[{'E': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 2: [[{'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 3: [[{'C2z': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 4: [[{'C2z': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 5: [[{'C2z': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 6: [[{'Sigmaz': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 7: [[{'Sigmaz': Matrix([[1/2],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 8: [[{'Sigmaz': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 9: [[{'Sigmaz': Matrix([[1/2],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 10: [[{'C2z': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 11: [[{'C2z': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2z': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 12: [[{'C2z': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 13: [[{'C2z': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[0],[0]])}],Matrix([[1/4],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2z': Matrix([[1/2],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}]],
 14: [[{'C2z': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[1/2],[0],[1/2]])}],Matrix([[-1/4],[ 0],[ 1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2z': Matrix([[1/2],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 15: [[{'C2z': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[0],[0]])}],Matrix([[1/4],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2z': Matrix([[1/2],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}]],
 16: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 17: [[{'C2x': Matrix([[0],[0],[1/2]])},
   {'C2y': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[0, -1, 0],[1,  0, 0],[0,  0, 1]]),[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[1/2]])}]],
 18: [[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 19: [[{'C2x': Matrix([[0],[1/2],[1/2]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[0, -1, 0],[1,  0, 0],[0,  0, 1]]),[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[0],[1/2]])}]],
 20: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 21: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 22: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 23: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 24: [[{'C2x': Matrix([[0],[1/2],[1/2]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/2],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[0],[1/2]])}]],
 25: [[{'Sigmax': Matrix([[0],[0],[0]])},
   {'Sigmay': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 26: [[{'Sigmax': Matrix([[0],[0],[0]])},
   {'Sigmay': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 27: [[{'Sigmax': Matrix([[0],[0],[1/2]])},
   {'Sigmay': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 28: [[{'Sigmax': Matrix([[1/2],[0],[0]])},
   {'Sigmay': Matrix([[0],[0],[0]])}],Matrix([[-1/4],[ 0],[ 0]]),Matrix([[0, -1, 0],[1,  0, 0],[0,  0, 1]]),[{'Sigmax': Matrix([[0],[1/2],[0]])},
   {'Sigmay': Matrix([[0],[1/2],[0]])}]],
 29: [[{'Sigmax': Matrix([[1/2],[0],[0]])},
   {'Sigmay': Matrix([[0],[0],[1/2]])}],Matrix([[-1/4],[ 0],[ 0]]),Matrix([[0, -1, 0],[1,  0, 0],[0,  0, 1]]),[{'Sigmax': Matrix([[0],[1/2],[1/2]])},
   {'Sigmay': Matrix([[0],[1/2],[0]])}]],
 30: [[{'Sigmax': Matrix([[1/2],[0],[1/2]])},
   {'Sigmay': Matrix([[0],[0],[1/2]])}],Matrix([[-1/4],[ 0],[ 0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'Sigmax': Matrix([[1/2],[0],[1/2]])},
   {'Sigmay': Matrix([[1/2],[0],[1/2]])}]],
 31: [[{'Sigmax': Matrix([[1/2],[0],[1/2]])},
   {'Sigmay': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[0, -1, 0],[1,  0, 0],[0,  0, 1]]),[{'Sigmax': Matrix([[0],[0],[0]])},
   {'Sigmay': Matrix([[0],[1/2],[1/2]])}]],
 32: [[{'Sigmax': Matrix([[1/2],[0],[0]])},
   {'Sigmay': Matrix([[0],[1/2],[0]])}],Matrix([[-1/4],[ 1/4],[ 0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'Sigmax': Matrix([[1/2],[1/2],[0]])},
   {'Sigmay': Matrix([[1/2],[1/2],[0]])}]],
 33: [[{'Sigmax': Matrix([[1/2],[0],[0]])},
   {'Sigmay': Matrix([[0],[1/2],[1/2]])}],Matrix([[-1/4],[ 1/4],[ 0]]),Matrix([[0, -1, 0],[1,  0, 0],[0,  0, 1]]),[{'Sigmax': Matrix([[1/2],[1/2],[1/2]])},
   {'Sigmay': Matrix([[1/2],[1/2],[0]])}]],
 34: [[{'Sigmax': Matrix([[1/2],[0],[1/2]])},
   {'Sigmay': Matrix([[0],[1/2],[1/2]])}],Matrix([[-1/4],[ 1/4],[ 0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'Sigmax': Matrix([[1/2],[1/2],[1/2]])},
   {'Sigmay': Matrix([[1/2],[1/2],[1/2]])}]],
 35: [[{'Sigmax': Matrix([[0],[0],[0]])},
   {'Sigmay': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 36: [[{'Sigmax': Matrix([[0],[0],[1/2]])},
   {'Sigmay': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[0, -1, 0],[1,  0, 0],[0,  0, 1]]),[{'Sigmax': Matrix([[0],[0],[0]])},
   {'Sigmay': Matrix([[0],[0],[1/2]])}]],
 37: [[{'Sigmax': Matrix([[0],[0],[1/2]])},
   {'Sigmay': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 38: [[{'Sigmaz': Matrix([[0],[0],[0]])},
   {'Sigmax': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[-1, 0, 0],[ 0, 0, 1],[ 0, 1, 0]]),[{'Sigmax': Matrix([[0],[0],[0]])},
   {'Sigmay': Matrix([[0],[0],[0]])}]],
 39: [[{'Sigmaz': Matrix([[1/2],[1/2],[0]])},
   {'Sigmax': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[-1, 0, 0],[ 0, 0, 1],[ 0, 1, 0]]),[{'Sigmax': Matrix([[1/2],[0],[1/2]])},
   {'Sigmay': Matrix([[1/2],[0],[1/2]])}]],
 40: [[{'Sigmaz': Matrix([[0],[0],[1/2]])},
   {'Sigmax': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[-1, 0, 0],[ 0, 0, 1],[ 0, 1, 0]]),[{'Sigmax': Matrix([[0],[1/2],[0]])},
   {'Sigmay': Matrix([[0],[1/2],[0]])}]],
 41: [[{'Sigmaz': Matrix([[1/2],[1/2],[1/2]])},
   {'Sigmax': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[-1, 0, 0],[ 0, 0, 1],[ 0, 1, 0]]),[{'Sigmax': Matrix([[1/2],[1/2],[1/2]])},
   {'Sigmay': Matrix([[1/2],[1/2],[1/2]])}]],
 42: [[{'Sigmax': Matrix([[0],[0],[0]])},
   {'Sigmay': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 43: [[{'Sigmax': Matrix([[0],[1/2],[0]])},
   {'Sigmay': Matrix([[1/2],[0],[0]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'Sigmax': Matrix([[3/4, 0, 0],[0, 3/4, 0],[0, 0, 3/4]])},
   {'Sigmay': Matrix([[3/4, 0, 0],[0, 3/4, 0],[0, 0, 3/4]])}]],
 44: [[{'Sigmax': Matrix([[0],[0],[0]])},
   {'Sigmay': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 45: [[{'Sigmax': Matrix([[1/2],[1/2],[0]])},
   {'Sigmay': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 46: [[{'Sigmax': Matrix([[0],[1/2],[1/2]])},
   {'Sigmay': Matrix([[0],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[ 0, 1,  0],[ 0, 1, -1],[-1, 1,  0]]),[{'Sigmax': Matrix([[1/2],[0],[1/2]])},
   {'Sigmay': Matrix([[1/2],[0],[1/2]])}]],
 47: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 48: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 49: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[0],[0],[1/2]])},
   {'C2y': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 50: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 51: [[{'C2x': Matrix([[0],[0],[1/2]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1,  0, 0],[0,  0, 1],[0, -1, 0]]),[{'C2x': Matrix([[0],[1/2],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}]],
 52: [[{'C2x': Matrix([[0],[0],[1/2]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/4],[1/4],[0]]),Matrix([[0, 0, -1],[0, 1,  0],[1, 0,  0]]),[{'C2x': Matrix([[1/2],[0],[1/2]])},
   {'C2y': Matrix([[1/2],[1/2],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 53: [[{'C2x': Matrix([[0],[0],[1/2]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[0],[0]])}],Matrix([[-1/4],[ 0],[ 0]]),Matrix([[0, -1, 0],[1,  0, 0],[0,  0, 1]]),[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[1/2],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 54: [[{'C2x': Matrix([[0],[0],[1/2]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[1/2],[0]])}],Matrix([[0],[1/4],[0]]),Matrix([[1,  0, 0],[0,  0, 1],[0, -1, 0]]),[{'C2x': Matrix([[0],[1/2],[1/2]])},
   {'C2y': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 55: [[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 56: [[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[-1/4],[-1/4],[-1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[0],[1/2],[1/2]])},
   {'C2y': Matrix([[1/2],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 57: [[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[1/2],[0]])}],Matrix([[0],[1/4],[0]]),Matrix([[ 0, -1, 0],[ 0,  0, 1],[-1,  0, 0]]),[{'C2x': Matrix([[1/2],[0],[0]])},
   {'C2y': Matrix([[1/2],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 58: [[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[1/2]])}],Matrix([[ 0],[ 0],[-1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[1/2],[1/2],[1/2]])},
   {'C2y': Matrix([[1/2],[1/2],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 59: [[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 60: [[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[0],[1/2]])}],Matrix([[-1/4],[ 0],[ 1/4]]),Matrix([[0, 0, -1],[0, 1,  0],[1, 0,  0]]),[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 61: [[{'C2x': Matrix([[0],[1/2],[1/2]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[0, -1, 0],[1,  0, 0],[0,  0, 1]]),[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 62: [[{'C2x': Matrix([[0],[1/2],[1/2]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/4],[1/4],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[1/2],[1/2],[1/2]])},
   {'C2y': Matrix([[1/2],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}]],
 63: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 64: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/4],[1/4],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[1/2],[1/2],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 65: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 66: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[0],[0],[1/2]])},
   {'C2y': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 67: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/4],[1/4],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}]],
 68: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),  {},  'Revised'],
 69: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 70: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/4, 0, 0],[0, 1/4, 0],[0, 0, 1/4]])}],Matrix([[0],[0],[0]]),Matrix([[ 1, 1,  1],[ 0, 0, -1],[-1, 0,  0]]),[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/4, 0, 0],[0, 1/4, 0],[0, 0, 1/4]])}]],
 71: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 72: [[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/4],[1/4],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}]],
 73: [[{'C2x': Matrix([[0],[1/2],[1/2]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[1/2],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2y': Matrix([[1/2],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 74: [[{'C2x': Matrix([[0],[1/2],[1/2]])},
   {'C2y': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[3/4],[1/4],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2x': Matrix([[0],[0],[0]])},
   {'C2y': Matrix([[0],[1/2],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 75: [[{'C4z+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 76: [[{'C4z+': Matrix([[0],[0],[1/4]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 77: [[{'C4z+': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 78: [[{'C4z+': Matrix([[0],[0],[3/4]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 79: [[{'C4z+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 80: [[{'C4z+': Matrix([[3/4],[1/4],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 81: [[{'S4z+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 82: [[{'S4z+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 83: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 84: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 85: [[{'C4z+': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 86: [[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 87: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 88: [[{'C4z+': Matrix([[3/4],[1/4],[1/2]])},
   {'I': Matrix([[3/4],[1/4],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 89: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 90: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/2],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])}]],
 91: [[{'C4z+': Matrix([[0],[0],[1/4]])},
   {'C2x': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[1/4]])},
   {'C2x': Matrix([[0],[0],[1/2]])}]],
 92: [[{'C4z+': Matrix([[0],[0],[1/4]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])}],Matrix([[ 1/2],[ 0],[-3/8]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[1/4]])},
   {'C2x': Matrix([[1/2],[1/2],[3/4]])}]],
 93: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'C2x': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 94: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/2],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[1/2]])}]],
 95: [[{'C4z+': Matrix([[0],[0],[3/4]])},
   {'C2x': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[3/4]])},
   {'C2x': Matrix([[0],[0],[1/2]])}]],
 96: [[{'C4z+': Matrix([[0],[0],[3/4]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])}],Matrix([[ 1/2],[ 0],[-1/8]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[3/4]])},
   {'C2x': Matrix([[1/2],[1/2],[1/4]])}]],
 97: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 98: [[{'C4z+': Matrix([[3/4],[1/4],[1/2]])},
   {'C2x': Matrix([[0],[1/2],[1/2]])}],Matrix([[1/8],[1/8],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[3/4],[1/4],[1/2]])},
   {'C2x': Matrix([[3/4],[1/4],[1/2]])}]],
 99: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'Sigmax': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 100: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'Sigmax': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 101: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'Sigmax': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 102: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'Sigmax': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[1/2],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'Sigmax': Matrix([[1/2],[1/2],[1/2]])}]],
 103: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'Sigmax': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 104: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'Sigmax': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 105: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'Sigmax': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 106: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'Sigmax': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 107: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'Sigmax': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 108: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'Sigmax': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 109: [[{'C4z+': Matrix([[3/4],[1/4],[1/2]])},
   {'Sigmax': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 110: [[{'C4z+': Matrix([[3/4],[1/4],[1/2]])},
   {'Sigmax': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 111: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 112: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 113: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 114: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 115: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 116: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 117: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 118: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 119: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 120: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 121: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 122: [[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[1/4],[3/4],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[ 0, 1,  0],[ 0, 1, -1],[-1, 1,  0]]),[{'S4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[3/4],[1/4],[1/2]])}]],
 123: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 124: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 125: [[{'C4z+': Matrix([[1/2],[1/2],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/2],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],  'Revised'],
 126: [[{'C4z+': Matrix([[1/2],[1/2],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[1/2],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}]],
 127: [[{'C4z+': Matrix([[1/2],[1/2],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[1/2],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}]],
 128: [[{'C4z+': Matrix([[1/2],[1/2],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[1/2]])}],Matrix([[1/2],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 129: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/2],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}]],
 130: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[1/2],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[1/2]])},
   {'I': Matrix([[1/2],[1/2],[0]])}]],
 131: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 132: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'C2x': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 133: [[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'C2x': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}]],
 134: [[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 135: [[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[1/2],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}]],
 136: [[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}]],
 137: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[1/2],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[1/2]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}]],
 138: [[{'C4z+': Matrix([[0],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[1/2],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[1/2],[1/2],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}]],
 139: [[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 140: [[{'C4z+': Matrix([[1/2],[1/2],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[3/4],[1/4],[1/2]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}]],
 141: [[{'C4z+': Matrix([[0],[1/2],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[1/2],[1/2],[0]])}],Matrix([[3/8],[1/8],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[3/4],[1/4],[1/2]])},
   {'C2x': Matrix([[3/4],[1/4],[1/2]])},
   {'I': Matrix([[3/4],[1/4],[1/2]])}],  'Revised'],
 142: [[{'C4z+': Matrix([[1/2],[0],[0]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[ 1/8],[ 3/8],[-1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C4z+': Matrix([[3/4],[1/4],[1/2]])},
   {'C2x': Matrix([[3/4],[1/4],[1/2]])},
   {'I': Matrix([[3/4],[1/4],[1/2]])}],  'Revised'],
 143: [[{'C3+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 144: [[{'C3+': Matrix([[0],[0],[1/3]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 145: [[{'C3+': Matrix([[0],[0],[2/3]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 146: [[{'C3+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 147: [[{'S6+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 148: [[{'S6+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 149: [[{'C3+': Matrix([[0],[0],[0]])},
   {'C21p': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 150: [[{'C3+': Matrix([[0],[0],[0]])},
   {'C21pp': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 151: [[{'C3+': Matrix([[0],[0],[1/3]])},
   {'C21p': Matrix([[0],[0],[2/3]])}],Matrix([[0],[0],[1/6]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C3+': Matrix([[0],[0],[1/3]])},
   {'C21p': Matrix([[0],[0],[1/3]])}]],
 152: [[{'C3+': Matrix([[0],[0],[1/3]])},
   {'C21pp': Matrix([[0],[0],[2/3]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 153: [[{'C3+': Matrix([[0],[0],[2/3]])},
   {'C21p': Matrix([[0],[0],[1/3]])}],Matrix([[ 0],[ 0],[-1/6]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C3+': Matrix([[0],[0],[2/3]])},
   {'C21p': Matrix([[0],[0],[2/3]])}]],
 154: [[{'C3+': Matrix([[0],[0],[2/3]])},
   {'C21pp': Matrix([[0],[0],[1/3]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 155: [[{'C3+': Matrix([[0],[0],[0]])},
   {'C21p': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),  {},  'Revised'],
 156: [[{'C3+': Matrix([[0],[0],[0]])},
   {'Sigmav1': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 157: [[{'C3+': Matrix([[0],[0],[0]])},
   {'Sigmad1': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 158: [[{'C3+': Matrix([[0],[0],[0]])},
   {'Sigmav1': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 159: [[{'C3+': Matrix([[0],[0],[0]])},
   {'Sigmad1': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 160: [[{'C3+': Matrix([[0],[0],[0]])},
   {'Sigmad1': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),  {},  'Revised'],
 161: [[{'C3+': Matrix([[0],[0],[0]])},
   {'Sigmad1': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),  {},  'Revised'],
 162: [[{'S6+': Matrix([[0],[0],[0]])},
   {'Sigmad1': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 163: [[{'S6+': Matrix([[0],[0],[0]])},
   {'Sigmad1': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 164: [[{'S6+': Matrix([[0],[0],[0]])},
   {'Sigmav1': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 165: [[{'S6+': Matrix([[0],[0],[0]])},
   {'Sigmav1': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 166: [[{'S6+': Matrix([[0],[0],[0]])},
   {'Sigmad1': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),  {},  'Revised'],
 167: [[{'S6+': Matrix([[0],[0],[0]])},
   {'Sigmad1': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),  {},  'Revised'],
 168: [[{'C6+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 169: [[{'C6+': Matrix([[0],[0],[1/6]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 170: [[{'C6+': Matrix([[0],[0],[5/6]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 171: [[{'C6+': Matrix([[0],[0],[1/3]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 172: [[{'C6+': Matrix([[0],[0],[2/3]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 173: [[{'C6+': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 174: [[{'S3+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 175: [[{'C6+': Matrix([[0],[0],[0]])},
   {'Sigmah': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 176: [[{'C6+': Matrix([[0],[0],[1/2]])},
   {'Sigmah': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C6+': Matrix([[0],[0],[1/2]])},
   {'Sigmah': Matrix([[0],[0],[1/2]])}]],
 177: [[{'C6+': Matrix([[0],[0],[0]])},
   {'C21p': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 178: [[{'C6+': Matrix([[0],[0],[1/6]])},
   {'C21p': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C6+': Matrix([[0],[0],[1/6]])},
   {'C21pp': Matrix([[0],[0],[0]])}],
  'Revised'],
 179: [[{'C6+': Matrix([[0],[0],[5/6]])},
   {'C21p': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C6+': Matrix([[0],[0],[5/6]])},
   {'C21pp': Matrix([[0],[0],[0]])}],
  'Revised'],
 180: [[{'C6+': Matrix([[0],[0],[1/3]])},
   {'C21p': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 181: [[{'C6+': Matrix([[0],[0],[2/3]])},
   {'C21p': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 182: [[{'C6+': Matrix([[0],[0],[1/2]])},
   {'C21p': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C6+': Matrix([[0],[0],[1/2]])},
   {'C21pp': Matrix([[0],[0],[0]])}],
  'Revised'],
 183: [[{'C6+': Matrix([[0],[0],[0]])},
   {'Sigmav1': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 184: [[{'C6+': Matrix([[0],[0],[0]])},
   {'Sigmav1': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 185: [[{'C6+': Matrix([[0],[0],[1/2]])},
   {'Sigmav1': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 186: [[{'C6+': Matrix([[0],[0],[1/2]])},
   {'Sigmav1': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 187: [[{'S3+': Matrix([[0],[0],[0]])},
   {'Sigmav1': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 188: [[{'S3+': Matrix([[0],[0],[0]])},
   {'Sigmav1': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'S3+': Matrix([[0],[0],[1/2]])},
   {'Sigmav1': Matrix([[0],[0],[1/2]])}]],
 189: [[{'S3+': Matrix([[0],[0],[0]])},
   {'Sigmad1': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 190: [[{'S3+': Matrix([[0],[0],[0]])},
   {'Sigmad1': Matrix([[0],[0],[1/2]])}],Matrix([[0],[0],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'S3+': Matrix([[0],[0],[1/2]])},
   {'Sigmad1': Matrix([[0],[0],[1/2]])}]],
 191: [[{'C6+': Matrix([[0],[0],[0]])},
   {'C21p': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 192: [[{'C6+': Matrix([[0],[0],[0]])},
   {'C21p': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 193: [[{'C6+': Matrix([[0],[0],[1/2]])},
   {'C21p': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 194: [[{'C6+': Matrix([[0],[0],[1/2]])},
   {'C21p': Matrix([[0],[0],[1/2]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 195: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 196: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 197: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 198: [[{'C2z': Matrix([[1/2],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 199: [[{'C2z': Matrix([[1/2],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 200: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 201: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 202: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 203: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/4],[1/4],[1/4]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 204: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 205: [[{'C2z': Matrix([[1/2],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 206: [[{'C2z': Matrix([[1/2],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 207: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 208: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[1/2],[1/2],[1/2]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 209: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 210: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[1/4],[1/4],[1/4]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 211: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 212: [[{'C2z': Matrix([[1/2],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2a': Matrix([[1/4],[3/4],[3/4]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 213: [[{'C2z': Matrix([[1/2],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2a': Matrix([[3/4],[1/4],[1/4]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 214: [[{'C2z': Matrix([[1/2],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2a': Matrix([[1/2],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 215: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'Sigmada': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 216: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'Sigmada': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 217: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'Sigmada': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 218: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'Sigmada': Matrix([[1/2],[1/2],[1/2]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 219: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'Sigmada': Matrix([[1/2],[1/2],[1/2]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 220: [[{'C2z': Matrix([[1/2],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'Sigmada': Matrix([[1/2],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 221: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 222: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 223: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[1/2],[1/2],[1/2]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 224: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[1/2],[1/2],[1/2]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 225: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 226: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/2],[1/2],[1/2]])}],Matrix([[1/4],[1/4],[1/4]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[1/2],[1/2],[1/2]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}]],
 227: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[1/4],[1/4],[1/4]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[1/4],[1/4],[1/4]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 228: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[1/4],[1/4],[1/4]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[3/4],[3/4],[3/4]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 229: [[{'C2z': Matrix([[0],[0],[0]])},
   {'C2x': Matrix([[0],[0],[0]])},
   {'C2a': Matrix([[0],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]],
 230: [[{'C2z': Matrix([[1/2],[0],[1/2]])},
   {'C2x': Matrix([[1/2],[1/2],[0]])},
   {'C2a': Matrix([[1/2],[0],[0]])},
   {'C31+': Matrix([[0],[0],[0]])},
   {'I': Matrix([[0],[0],[0]])}],Matrix([[0],[0],[0]]),Matrix([[1, 0, 0],[0, 1, 0],[0, 0, 1]]),[]]}
